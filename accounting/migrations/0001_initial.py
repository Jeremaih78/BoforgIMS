# Generated by Django 5.2.6 on 2025-09-12 10:06

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
        ('inventory', '0002_product_reorder_level_product_reserved_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(blank=True, max_length=5, null=True)),
                ('is_base', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FiscalPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_closed', models.BooleanField(default=False)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='NumberSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=30, unique=True)),
                ('prefix', models.CharField(default='', max_length=10)),
                ('next_number', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('rate', models.DecimalField(decimal_places=4, max_digits=7)),
                ('is_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('ASSET', 'Asset'), ('LIABILITY', 'Liability'), ('EQUITY', 'Equity'), ('REVENUE', 'Revenue'), ('EXPENSE', 'Expense')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='accounting.account')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=100)),
                ('object_id', models.IntegerField()),
                ('action', models.CharField(max_length=30)),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('diff', models.JSONField(default=dict)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.account')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
            ],
        ),
        migrations.CreateModel(
            name='ARPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_no', models.CharField(blank=True, default='', max_length=20, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('fx_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=18)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=18)),
                ('method', models.CharField(default='Cash', max_length=50)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='customers.customer')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.bankaccount')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
            ],
        ),
        migrations.CreateModel(
            name='APPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_no', models.CharField(blank=True, default='', max_length=20, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('fx_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=18)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=18)),
                ('method', models.CharField(default='Cash', max_length=50)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.supplier')),
                ('bank', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.bankaccount')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('default_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.account')),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, default='', max_length=20, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('memo', models.CharField(blank=True, max_length=255, null=True)),
                ('fx_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=18)),
                ('posted_at', models.DateTimeField(blank=True, null=True)),
                ('is_posted', models.BooleanField(default=False)),
                ('source', models.CharField(choices=[('INVOICE', 'Invoice'), ('PAYMENT', 'Payment'), ('BILL', 'Supplier Bill'), ('EXPENSE', 'Expense'), ('ADJUSTMENT', 'Adjustment')], default='ADJUSTMENT', max_length=20)),
                ('source_id', models.IntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierBill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_no', models.CharField(blank=True, default='', max_length=20, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('fx_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=18)),
                ('subtotal', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('tax', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('total', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('POSTED', 'Posted'), ('PARTIAL', 'Partial'), ('PAID', 'Paid')], default='DRAFT', max_length=10)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='inventory.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='SupplierBillLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('qty', models.DecimalField(decimal_places=6, default=Decimal('1'), max_digits=18)),
                ('unit_price', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.account')),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.supplierbill')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.product')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxrate')),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doc_no', models.CharField(blank=True, default='', max_length=20, unique=True)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('payee', models.CharField(max_length=150)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=18)),
                ('fx_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=18)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='expenses/')),
                ('posted', models.BooleanField(default=False)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.currency')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.expensecategory')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounting.taxrate')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.DecimalField(decimal_places=6, max_digits=18)),
                ('date', models.DateField()),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='accounting.currency')),
            ],
            options={
                'ordering': ['-date', '-id'],
                'unique_together': {('currency', 'date')},
            },
        ),
        migrations.CreateModel(
            name='JournalLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('debit', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('credit', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('debit_base', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('credit_base', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18)),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounting.account')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='customers.customer')),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='accounting.journalentry')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.product')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
            ],
            options={
                'indexes': [models.Index(fields=['account'], name='accounting__account_c6b1e8_idx')],
            },
        ),
    ]
